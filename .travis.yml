language: php

php:
  - 7.3
  - 7.4

services:
  - mysql

env:
  global:
    - MODULE_NAME="protect_before_launch"
    - DRUPAL_REPO="https://git.drupalcode.org/project/drupal.git"
    - PHPCS_VERSION="^2.7"
    - CODER_VERSION="^8.2"
  matrix:
    - DRUPAL_VERSION="8.6.x"
    - DRUPAL_VERSION="8.7.x"
    - DRUPAL_VERSION="8.8.x"
    - DRUPAL_VERSION="8.9.x"
    - DRUPAL_VERSION="9.0.x"
    - DRUPAL_VERSION="9.1.x"

matrix:
  fast_finish: true
  exclude:
    - php: 7.4
      env: DRUPAL_VERSION="8.6.x"
    - php: 7.4
      env: DRUPAL_VERSION="8.7.x"

cache:
  bundler: true
  apt: true
  directories:
    - "$HOME/.composer/cache"
    - "$HOME/.drush/cache"

before_install:
  # Decide if we are going to do a full inspection on this build
  - if [ "$TRAVIS_PHP_VERSION" == "7.2" ] && [ "$DRUPAL_VERSION" == "8.7.x" ] ; then export INSPECT="true"; else export INSPECT="false"; fi;
  # Decide if this build is used to push upstream changes to Drupal.org
  - if [ "$INSPECT" == "true" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then export UPSTREAM="true"; else export UPSTREAM="false"; fi;

  # Disable xdebug when we do not generate coverage files
  - if [ "$INSPECT" == "false" ]; then phpenv config-rm xdebug.ini; fi;

  # Composer
  - sed -i '1i export PATH="$HOME/.composer/vendor/bin:$PATH"' $HOME/.bashrc
  - source $HOME/.bashrc
  - composer self-update --1
  - composer config --global discard-changes true

  # Load global dependencies
  - composer global require drush/drush:~8.1
  - composer global require squizlabs/php_codesniffer:$PHPCS_VERSION
  - composer global require drupal/coder:$CODER_VERSION
  - ln -s ~/.composer/vendor/drupal/coder/coder_sniffer/Drupal ~/.composer/vendor/squizlabs/php_codesniffer/CodeSniffer/Standards/

  # Ensure the PHP environment is ready
  - phpenv rehash

  # Isolate our module into a separate directory
  - mkdir module
  - shopt -s extglob dotglob
  - mv !(module) module
  - shopt -u dotglob
  - git clone --branch $DRUPAL_VERSION $DRUPAL_REPO drupal --depth 1

  # Make sure Drupal can access our module by using a symlink
  - ln -s $PWD/module drupal/modules/$MODULE_NAME
  - cd drupal

install:
  # Merge the module requirements with the core requirements
  # (yes this is ugly but it works very well, let us know if there is a better way to do it please)
  - sed -i "s|\"core/composer.json\"|\"core/composer.json\",\"modules/$MODULE_NAME/composer.json\"|" composer.json
  - composer install
  - COMPOSER_MEMORY_LIMIT=-1 composer require "drupal/console:^1.0" --dev
  - COMPOSER_MEMORY_LIMIT=-1 composer require "mockery/mockery:^1.0" --dev
  - composer update

  # This fixes a fail when install Drupal.
  - echo 'sendmail_path = /bin/true' >> ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/travis.ini

  # Mysql might time out for long tests, increase the wait timeout.
  - mysql -e 'SET @@GLOBAL.wait_timeout=1200'

  # Install Drupal and enable the required modules (including this one).
  - mysql -e 'create database drupal;'
  - cd $TRAVIS_BUILD_DIR/drupal && drush --yes site-install standard --db-url="mysql://root@127.0.0.1/drupal"
  - cd $TRAVIS_BUILD_DIR/drupal && drush --yes en $MODULE_NAME

  # Export simpletest environment variables
  - export SIMPLETEST_BASE_URL=http://localhost:8080
  - export SIMPLETEST_DB=mysql://root:@127.0.0.1/drupal

  # Do not break on deprecation warnings
  - export SYMFONY_DEPRECATIONS_HELPER=disabled

  # Start a web server
  - cd $TRAVIS_BUILD_DIR/drupal
  - drush runserver 127.0.0.1:8080 &

script:
  # Code Style
  - phpcs --report=full --standard=Drupal --warning-severity=0 $TRAVIS_BUILD_DIR/drupal/modules/$MODULE_NAME --ignore=bin,*.css,gulpfile.js,libraries,modules/contrib,vendor

  # Static Analysis
  - if [ "$INSPECT" == "true" ]; then
      composer require "phpstan/phpstan" --dev;
      vendor/bin/phpstan analyse modules/$MODULE_NAME/src -c modules/$MODULE_NAME/phpstan.neon;
    fi

  # PHPUnit
  - if [ "$INSPECT" == "true" ]; then export PHPUNIT_FLAGS="--coverage-clover=coverage.clover"; else export PHPUNIT_FLAGS=""; fi;
  - cd $TRAVIS_BUILD_DIR/drupal
  - if [ "$DRUPAL_VERSION" == "9.1.x" ]; then
      COMPOSER_MEMORY_LIMIT=-1 composer require "phpspec/prophecy-phpunit:^2" --dev;
    fi
  - vendor/bin/phpunit -c core/phpunit.xml.dist modules/$MODULE_NAME $PHPUNIT_FLAGS;

after_success:
  - if [ "$INSPECT" == "true" ]; then
      cd $TRAVIS_BUILD_DIR/module;
      mv $TRAVIS_BUILD_DIR/drupal/coverage.clover coverage.clover;
      wget https://scrutinizer-ci.com/ocular.phar && php ocular.phar code-coverage:upload --format=php-clover coverage.clover;
      rm coverage.clover;
    fi
  - if [ "$UPSTREAM" == "true" ]; then
      eval "$(ssh-agent -s)";
      echo $DRUPAL_ORG_KEY | base64 --decode > drupalorg_key.pem;
      chmod 600 drupalorg_key.pem;
      ssh-add drupalorg_key.pem;
      git fetch --unshallow;
      git config --global user.name "devmonk";
      git config --global user.email devmonk@mediamonks.com;
      git config --global push.default matching;
      git config --global push.followTags true;
      echo -e "Host git.drupal.org\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config;
      git remote add drupalorg git@git.drupal.org:project/$MODULE_NAME.git;
      git push drupalorg $TRAVIS_BRANCH;
      eval "$(ssh-agent -k)";
    fi
